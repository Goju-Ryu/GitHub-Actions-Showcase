# This is a basic workflow to help you get started with Actions
name: flutter build and release

# Controls when the action will run. This workflow is triggered by
# "dispatch events" meaning someone manually activates it
on:
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Sets up a java environment on the vm
      - uses: actions/setup-java@v1.4.2
        with:
          java-version: '12.x'

      # Sets up flutter using the 1.20.4 version of the flutter sdk
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.20.4'

      # Run some flutter commands, getting packages, running tests and build for android and iOS
      - run: flutter pub get
      - run: flutter test
      - run: flutter build appbundle --release
      - run: flutter build apk --release
      - run: flutter build ios --release --no-codesign

      - uses: actions/upload-artifact@v2
        with:
          name: releases
          path: |
            build/**/*.app
            build/**/*.apk
            build/**/*.aab

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: releases
          path: releases/


      - name: Bump version and push tag
        # MIT Licenced open source action for creating a new version tag
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: v

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          #          body: |   TODO figure out how to dynamically add a message (argument to workflow?)
          #            Changes in this Release
          #            - First Change
          #            - Second Change
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: releases/
          asset_name: app-builds.zip
          asset_content_type: application/