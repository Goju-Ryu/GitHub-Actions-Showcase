# This is a basic workflow to help you get started with Actions
name: flutter test-build

# Controls when the action will run. This workflow is triggered by
# pull requests targeting master and "dispatch events" meaning someone manually activates it
on:
  pull_request:

  push:
    branches: [ master ]
    
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # cache files to reduce setup and compile types
    - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter-install-cache-${{ env.flutter_version }}

    - name: cache build files
      uses: actions/cache@v2
      with:
        path: |
          **/.gradle/caches
          **/.gradle/wrapper
          **/.dart_tool
          **/build/app/
        key: ${{ runner.os }}-flutter-debug-${{ hashFiles('**/*') }}
        restore-keys: |
          ${{ runner.os }}-flutter-debug-
          ${{ runner.os }}-flutter-install-

    # Sets up a java environment on the vm
    - uses: actions/setup-java@v1.4.2
      with:
        java-version: '12.x'
    # Sets up flutter using the 1.20.4 version of the flutter sdk
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.20.4'
    # Run some flutter commands, getting packages, running tests and build for android and iOS
    - run: flutter pub get
    - run: flutter test
    - run: flutter build appbundle
    - run: flutter build ios --simulator --no-codesign

    - uses: actions/upload-artifact@v2
      with:
        name: debug
        path: build/**/*.*
